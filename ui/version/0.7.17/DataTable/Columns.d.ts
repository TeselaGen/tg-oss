export function useColumns({ addFilters, cellRenderer, columns, currentParams, compact, editingCell, editingCellSelectAll, entities, expandedEntityIdMap, extraCompact, filters, formName, getCellHoverText, isCellEditable, isEntityDisabled, isLocalCall, isSimple, isSingleSelect, isSelectionARectangle, noDeselectAll, noSelect, noUserSelect, onDeselect, onMultiRowSelect, onRowClick, onRowSelect, onSingleRowSelect, order, primarySelectedCellId, reduxFormCellValidation, reduxFormSelectedEntityIdMap, refocusTable, removeSingleFilter, schema, selectedCells, setExpandedEntityIdMap, setNewParams, setOrder, setSelectedCells, shouldShowSubComponent, startCellEdit, SubComponent, tableRef, updateEntitiesHelper, updateValidation, withCheckboxes, withExpandAndCollapseAllButton, withFilter: _withFilter, withSort }: {
    addFilters: any;
    cellRenderer: any;
    columns: any;
    currentParams: any;
    compact: any;
    editingCell: any;
    editingCellSelectAll: any;
    entities: any;
    expandedEntityIdMap: any;
    extraCompact: any;
    filters: any;
    formName: any;
    getCellHoverText: any;
    isCellEditable: any;
    isEntityDisabled: any;
    isLocalCall: any;
    isSimple: any;
    isSingleSelect: any;
    isSelectionARectangle: any;
    noDeselectAll: any;
    noSelect: any;
    noUserSelect: any;
    onDeselect: any;
    onMultiRowSelect: any;
    onRowClick: any;
    onRowSelect: any;
    onSingleRowSelect: any;
    order: any;
    primarySelectedCellId: any;
    reduxFormCellValidation: any;
    reduxFormSelectedEntityIdMap: any;
    refocusTable: any;
    removeSingleFilter?: ((...args: any[]) => void) | undefined;
    schema: any;
    selectedCells: any;
    setExpandedEntityIdMap: any;
    setNewParams: any;
    setOrder?: ((...args: any[]) => void) | undefined;
    setSelectedCells: any;
    shouldShowSubComponent: any;
    startCellEdit: any;
    SubComponent: any;
    tableRef: any;
    updateEntitiesHelper: any;
    updateValidation: any;
    withCheckboxes: any;
    withExpandAndCollapseAllButton: any;
    withFilter: any;
    withSort?: boolean | undefined;
}): any;
